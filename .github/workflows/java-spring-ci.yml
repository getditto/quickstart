#
# .github/workflows/java-spring-ci.yml
# Workflow for building and testing java-spring with BrowserStack integration
#
---
name: java-spring-ci

on:
  pull_request:
    branches: [main]
    paths:
      - 'java-spring/**'
      - '.github/workflows/java-spring-ci.yml'
  push:
    branches: [main, teodor/add-android-spring-ci]
    paths:
      - 'java-spring/**'
      - '.github/workflows/java-spring-ci.yml'
  workflow_dispatch:  # Allow manual trigger

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest
    timeout-minutes: 10

    steps:
      - uses: actions/checkout@v4

      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v3

      - name: Create .env file
        run: |
          echo "DITTO_APP_ID=${{ secrets.DITTO_APP_ID }}" > .env
          echo "DITTO_PLAYGROUND_TOKEN=${{ secrets.DITTO_PLAYGROUND_TOKEN }}" >> .env
          echo "DITTO_AUTH_URL=${{ secrets.DITTO_AUTH_URL }}" >> .env
          echo "DITTO_WEBSOCKET_URL=${{ secrets.DITTO_WEBSOCKET_URL }}" >> .env

      - name: Run linter (PMD)
        working-directory: java-spring
        run: ./gradlew pmdMain pmdTest

      - name: Run static analysis (SpotBugs)
        working-directory: java-spring
        run: ./gradlew spotbugsMain

  build:
    name: Build
    runs-on: ubuntu-latest
    needs: lint
    timeout-minutes: 20
    outputs:
      test_doc_title: ${{ steps.test_doc.outputs.test_doc_title }}

    steps:
      - uses: actions/checkout@v4

      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v3

      - name: Cache Gradle dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Generate test document title
        id: test_doc
        run: |
          # Create a unique GitHub test document with inverted timestamp to appear at top
          TIMESTAMP=$(date +%s)
          INVERTED_TIMESTAMP=$((9999999999 - TIMESTAMP))
          DOC_ID="${INVERTED_TIMESTAMP}_java_spring_ci_test_${{ github.run_id }}_${{ github.run_number }}"
          DOC_TITLE="${INVERTED_TIMESTAMP}_java_spring_ci_test_${{ github.run_id }}_${{ github.run_number }}"

          echo "test_doc_id=$DOC_ID" >> $GITHUB_OUTPUT
          echo "test_doc_title=$DOC_TITLE" >> $GITHUB_OUTPUT
          echo "📝 Generated test document (inverted timestamp for top position)"
          echo "📝 ID: '${DOC_ID}'"
          echo "📝 Title: '${DOC_TITLE}'"
          echo "📝 Timestamp: ${TIMESTAMP} → Inverted: ${INVERTED_TIMESTAMP}"

      - name: Create .env file
        run: |
          echo "DITTO_APP_ID=${{ secrets.DITTO_APP_ID }}" > .env
          echo "DITTO_PLAYGROUND_TOKEN=${{ secrets.DITTO_PLAYGROUND_TOKEN }}" >> .env
          echo "DITTO_AUTH_URL=${{ secrets.DITTO_AUTH_URL }}" >> .env
          echo "DITTO_WEBSOCKET_URL=${{ secrets.DITTO_WEBSOCKET_URL }}" >> .env

      - name: Build Spring Boot JAR
        working-directory: java-spring
        env:
          DITTO_APP_ID: ${{ secrets.DITTO_APP_ID }}
          DITTO_PLAYGROUND_TOKEN: ${{ secrets.DITTO_PLAYGROUND_TOKEN }}
          DITTO_AUTH_URL: ${{ secrets.DITTO_AUTH_URL }}
          DITTO_WEBSOCKET_URL: ${{ secrets.DITTO_WEBSOCKET_URL }}
          DITTO_ENABLE_CLOUD_SYNC: true
        run: ./gradlew bootJar


      - name: Upload JAR artifacts
        uses: actions/upload-artifact@v4
        with:
          name: java-spring-jar-${{ github.run_number }}
          path: java-spring/build/libs/quickstart-0.0.1-SNAPSHOT.jar
          retention-days: 1

