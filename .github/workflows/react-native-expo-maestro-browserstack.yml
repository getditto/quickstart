name: react-native-expo-maestro-browserstack

on:
  pull_request:
    branches: [main]
    paths:
      - 'react-native-expo/**'
      - '.github/workflows/react-native-expo-maestro-browserstack.yml'
      - '.github/scripts/browserstack-maestro-test.py'
  push:
    branches: [main]
    paths:
      - 'react-native-expo/**'
      - '.github/workflows/react-native-expo-maestro-browserstack.yml'
      - '.github/scripts/browserstack-maestro-test.py'
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  maestro-tests:
    name: Maestro Android Tests (ubuntu-latest)
    runs-on: ubuntu-latest
    timeout-minutes: 45
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Java 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'yarn'
          cache-dependency-path: react-native-expo/yarn.lock

      - name: Create .env file
        run: |
          echo "DITTO_APP_ID=${{ secrets.DITTO_APP_ID }}" > .env
          echo "DITTO_PLAYGROUND_TOKEN=${{ secrets.DITTO_PLAYGROUND_TOKEN }}" >> .env
          echo "DITTO_AUTH_URL=${{ secrets.DITTO_AUTH_URL }}" >> .env
          echo "DITTO_WEBSOCKET_URL=${{ secrets.DITTO_WEBSOCKET_URL }}" >> .env

      - name: Insert test document into Ditto Cloud
        run: |
          # Use GitHub run ID to create deterministic document ID
          DOC_ID="github_expo_test_${GITHUB_RUN_ID}_${GITHUB_RUN_NUMBER}"
          TIMESTAMP=$(date -u +"%Y-%m-%d %H:%M:%S UTC")
          
          # Insert document using curl with correct JSON structure
          RESPONSE=$(curl -s -w "\n%{http_code}" -X POST \
            -H 'Content-type: application/json' \
            -H "Authorization: Bearer ${{ secrets.DITTO_API_KEY }}" \
            -d "{
              \"statement\": \"INSERT INTO tasks DOCUMENTS (:newTask) ON ID CONFLICT DO UPDATE\",
              \"args\": {
                \"newTask\": {
                  \"_id\": \"${DOC_ID}\",
                  \"title\": \"GitHub Expo Test Task ${GITHUB_RUN_ID}\",
                  \"done\": false,
                  \"deleted\": false
                }
              }
            }" \
          "https://${{ secrets.DITTO_API_URL }}/api/v4/store/execute")
          
          # Extract HTTP status code and response body
          HTTP_CODE=$(echo "$RESPONSE" | tail -n1)
          BODY=$(echo "$RESPONSE" | head -n -1)
          
          # Check if insertion was successful
          if [ "$HTTP_CODE" -eq 200 ] || [ "$HTTP_CODE" -eq 201 ]; then
            echo "✓ Successfully inserted test document with ID: ${DOC_ID}"
            echo "GITHUB_TEST_DOC_ID=${DOC_ID}" >> $GITHUB_ENV
          else
            echo "❌ Failed to insert document. HTTP Status: $HTTP_CODE"
            echo "Response: $BODY"
            exit 1
          fi

      - name: Install dependencies
        working-directory: react-native-expo
        run: yarn install

      - name: Run linter
        working-directory: react-native-expo
        run: yarn lint

      - name: Setup Android SDK
        uses: android-actions/setup-android@v3
        with:
          api-level: 34
          build-tools: 34.0.0

      - name: Cache Gradle dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
            react-native-expo/android/.gradle
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Make gradlew executable
        working-directory: react-native-expo/android
        run: chmod +x ./gradlew

      - name: Build Android APK
        working-directory: react-native-expo
        run: |
          # Use the build command from package.json
          yarn run build:android
        env:
          JAVA_HOME: ${{ env.JAVA_HOME_17_X64 }}

      - name: Verify APK exists
        run: |
          APK_PATH="react-native-expo/android/app/build/outputs/apk/debug/app-debug.apk"
          if [ -f "$APK_PATH" ]; then
            echo "✓ APK found: $APK_PATH"
            echo "APK size: $(du -h "$APK_PATH" | cut -f1)"
          else
            echo "❌ APK not found at expected location: $APK_PATH"
            echo "Searching for APK files:"
            find react-native-expo/android -name "*.apk" -type f
            exit 1
          fi

      - name: Install Python dependencies
        run: |
          pip3 install requests

      - name: Make test script executable
        run: chmod +x .github/scripts/browserstack-maestro-test.py

      - name: Execute Maestro tests on BrowserStack
        env:
          BROWSERSTACK_USERNAME: ${{ secrets.BROWSERSTACK_USERNAME }}
          BROWSERSTACK_ACCESS_KEY: ${{ secrets.BROWSERSTACK_ACCESS_KEY }}
          DITTO_APP_ID: ${{ secrets.DITTO_APP_ID }}
          DITTO_PLAYGROUND_TOKEN: ${{ secrets.DITTO_PLAYGROUND_TOKEN }}
          GITHUB_RUN_NUMBER: ${{ github.run_number }}
          GITHUB_TEST_DOC_ID: ${{ env.GITHUB_TEST_DOC_ID }}
          APP_TYPE: "expo"
          GITHUB_WORKSPACE: ${{ github.workspace }}
        run: |
          python3 .github/scripts/browserstack-maestro-test.py

      - name: Generate test report
        if: always()
        run: |
          echo "# React Native Expo Maestro Test Report" > maestro-test-report.md
          echo "" >> maestro-test-report.md
          echo "## Test Configuration" >> maestro-test-report.md
          echo "- **App Type**: React Native with Expo" >> maestro-test-report.md
          echo "- **Test Framework**: Maestro" >> maestro-test-report.md
          echo "- **Platform**: BrowserStack App Automate" >> maestro-test-report.md
          echo "- **GitHub Run**: #${{ github.run_number }}" >> maestro-test-report.md
          echo "" >> maestro-test-report.md
          echo "## Tested Devices" >> maestro-test-report.md
          echo "- Google Pixel 7 (Android 13.0)" >> maestro-test-report.md
          echo "- Samsung Galaxy S23 (Android 13.0)" >> maestro-test-report.md
          echo "- OnePlus 11 (Android 13.0)" >> maestro-test-report.md
          echo "" >> maestro-test-report.md
          echo "## Sync Verification" >> maestro-test-report.md
          echo "- **External Test Document ID**: ${GITHUB_TEST_DOC_ID:-Not generated}" >> maestro-test-report.md
          echo "" >> maestro-test-report.md
          echo "## Test Flows Executed" >> maestro-test-report.md
          echo "1. **App Launch**: Basic app startup and permission handling" >> maestro-test-report.md
          echo "2. **Create Task**: Task creation functionality" >> maestro-test-report.md
          echo "3. **Toggle Task**: Task completion toggle" >> maestro-test-report.md
          echo "4. **Edit Task**: Task editing via long press" >> maestro-test-report.md
          echo "5. **Delete Task**: Task deletion functionality" >> maestro-test-report.md
          echo "6. **Sync Toggle**: Ditto sync enable/disable" >> maestro-test-report.md
          echo "7. **Data Persistence**: App restart data persistence" >> maestro-test-report.md
          echo "8. **External Sync**: External document sync verification" >> maestro-test-report.md
          echo "9. **Full Workflow**: Complete user journey testing" >> maestro-test-report.md

      - name: Upload test artifacts
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: expo-maestro-test-results
          path: |
            react-native-expo/android/app/build/outputs/apk/debug/app-debug.apk
            maestro-test-report.md
            .github/scripts/browserstack-maestro-test.py