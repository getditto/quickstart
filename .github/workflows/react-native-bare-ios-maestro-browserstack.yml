name: react-native-bare-ios-maestro-browserstack

on:
  pull_request:
    branches: [main]
    paths:
      - 'react-native/**'
      - '.github/workflows/react-native-bare-ios-maestro-browserstack.yml'
      - '.github/scripts/browserstack-maestro-test.py'
  push:
    branches: [main]
    paths:
      - 'react-native/**'
      - '.github/workflows/react-native-bare-ios-maestro-browserstack.yml'
      - '.github/scripts/browserstack-maestro-test.py'
  workflow_dispatch:

concurrency:
  group: rn-bare-ios-maestro-browserstack-${{ github.ref }}
  cancel-in-progress: false

jobs:
  maestro-ios-tests:
    name: Maestro iOS Tests on BrowserStack (Bare RN)
    runs-on: macos-latest
    timeout-minutes: 45
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'yarn'
          cache-dependency-path: react-native/yarn.lock

      - name: Setup Xcode
        uses: maxim-lobanov/setup-xcode@v1
        with:
          xcode-version: '16.4'

      - name: Create .env file
        run: |
          echo "DITTO_APP_ID=${{ secrets.DITTO_APP_ID }}" > .env
          echo "DITTO_PLAYGROUND_TOKEN=${{ secrets.DITTO_PLAYGROUND_TOKEN }}" >> .env
          echo "DITTO_AUTH_URL=${{ secrets.DITTO_AUTH_URL }}" >> .env
          echo "DITTO_WEBSOCKET_URL=${{ secrets.DITTO_WEBSOCKET_URL }}" >> .env

      - name: Insert test document into Ditto Cloud
        run: |
          # Use GitHub run ID to create deterministic document ID
          DOC_ID="github_bare_ios_test_${GITHUB_RUN_ID}_${GITHUB_RUN_NUMBER}"
          TIMESTAMP=$(date -u +"%Y-%m-%d %H:%M:%S UTC")
          
          # Insert document using curl with correct JSON structure
          RESPONSE=$(curl -s -w "\n%{http_code}" -X POST \
            -H 'Content-type: application/json' \
            -H "Authorization: Bearer ${{ secrets.DITTO_API_KEY }}" \
            -d "{
              \"statement\": \"INSERT INTO tasks DOCUMENTS (:newTask) ON ID CONFLICT DO UPDATE\",
              \"args\": {
                \"newTask\": {
                  \"_id\": \"${DOC_ID}\",
                  \"title\": \"GitHub Bare iOS Test Task ${GITHUB_RUN_ID}\",
                  \"done\": false,
                  \"deleted\": false
                }
              }
            }" \
          "https://${{ secrets.DITTO_API_URL }}/api/v4/store/execute")
          
          # Extract HTTP status code and response body
          HTTP_CODE=$(echo "$RESPONSE" | tail -n1)
          BODY=$(echo "$RESPONSE" | sed '$d')
          
          # Check if insertion was successful
          if [ "$HTTP_CODE" -eq 200 ] || [ "$HTTP_CODE" -eq 201 ]; then
            echo "✓ Successfully inserted test document with ID: ${DOC_ID}"
            echo "GITHUB_TEST_DOC_ID=${DOC_ID}" >> $GITHUB_ENV
          else
            echo "❌ Failed to insert document. HTTP Status: $HTTP_CODE"
            echo "Response: $BODY"
            exit 1
          fi

      - name: Install dependencies
        working-directory: react-native
        run: yarn install

      - name: Install iOS pods
        working-directory: react-native/ios
        run: pod install

      - name: Build iOS IPA (Unsigned for BrowserStack)
        working-directory: react-native
        run: |
          # BrowserStack requires proper device .ipa files (Payload-style) for Maestro
          cd ios
          
          # 1) Archive for device (unsigned)
          xcodebuild -workspace DittoReactNativeSampleApp.xcworkspace \
            -scheme DittoReactNativeSampleApp \
            -configuration Debug \
            -destination 'generic/platform=iOS' \
            -archivePath build/DittoReactNativeSampleApp.xcarchive \
            clean archive \
            CODE_SIGNING_ALLOWED=NO CODE_SIGNING_REQUIRED=NO CODE_SIGNING_IDENTITY=""
          
          # 2) Package an unsigned .ipa (Payload layout)
          APP_NAME="DittoReactNativeSampleApp"
          IPA_DIR="build/ipa"
          mkdir -p "$IPA_DIR/Payload"
          cp -R "build/DittoReactNativeSampleApp.xcarchive/Products/Applications/${APP_NAME}.app" "$IPA_DIR/Payload/"
          ( cd "$IPA_DIR" && zip -r "${APP_NAME}-unsigned.ipa" Payload )
          
          echo "✅ Successfully created unsigned device IPA for BrowserStack"

      - name: Verify iOS IPA exists
        run: |
          # Look for the unsigned device IPA file for BrowserStack Maestro v2
          echo "🔍 Searching for iOS IPA file..."
          
          # Look for the specific unsigned IPA
          IOS_IPA_PATH="react-native/ios/build/ipa/DittoReactNativeSampleApp-unsigned.ipa"
          
          if [ -f "$IOS_IPA_PATH" ]; then
            echo "✓ iOS IPA found: $IOS_IPA_PATH"
            echo "IOS_APP_PATH=$IOS_IPA_PATH" >> $GITHUB_ENV
          else
            echo "❌ iOS IPA not found at expected location: $IOS_IPA_PATH"
            echo "Checking build output structure:"
            find react-native/ios/build -name "*.ipa" -type f || echo "No .ipa files found in build output"
            echo ""
            echo "Build directory structure:"
            ls -la react-native/ios/build/ || echo "Build directory not found"
            echo ""
            echo "IPA directory contents:"
            ls -la react-native/ios/build/ipa/ || echo "IPA directory not found"
            exit 1
          fi

      - name: Install Python dependencies
        run: |
          pip3 install --break-system-packages requests

      - name: Make test script executable
        run: chmod +x .github/scripts/browserstack-maestro-test.py

      - name: Execute Maestro tests on BrowserStack iOS devices
        env:
          BROWSERSTACK_USERNAME: ${{ secrets.BROWSERSTACK_USERNAME }}
          BROWSERSTACK_ACCESS_KEY: ${{ secrets.BROWSERSTACK_ACCESS_KEY }}
          DITTO_APP_ID: ${{ secrets.DITTO_APP_ID }}
          DITTO_PLAYGROUND_TOKEN: ${{ secrets.DITTO_PLAYGROUND_TOKEN }}
          GITHUB_RUN_NUMBER: ${{ github.run_number }}
          GITHUB_TEST_DOC_ID: ${{ env.GITHUB_TEST_DOC_ID }}
          APP_TYPE: "bare"
          PLATFORM_TYPE: "ios"
          GITHUB_WORKSPACE: ${{ github.workspace }}
        run: |
          python3 .github/scripts/browserstack-maestro-test.py

      - name: Generate test report
        if: always()
        run: |
          echo "# React Native Bare iOS Maestro Test Report" > maestro-bare-ios-test-report.md
          echo "" >> maestro-bare-ios-test-report.md
          echo "## Test Configuration" >> maestro-bare-ios-test-report.md
          echo "- **App Type**: Bare React Native" >> maestro-bare-ios-test-report.md
          echo "- **Platform**: iOS" >> maestro-bare-ios-test-report.md
          echo "- **Test Framework**: Maestro" >> maestro-bare-ios-test-report.md
          echo "- **Platform**: BrowserStack App Automate" >> maestro-bare-ios-test-report.md
          echo "- **GitHub Run**: #${{ github.run_number }}" >> maestro-bare-ios-test-report.md
          echo "" >> maestro-bare-ios-test-report.md
          echo "## Tested Devices" >> maestro-bare-ios-test-report.md
          echo "- iPhone 14 (iOS 16)" >> maestro-bare-ios-test-report.md
          echo "- iPhone 15 (iOS 17)" >> maestro-bare-ios-test-report.md
          echo "- iPad Pro 12.9 2022 (iOS 16)" >> maestro-bare-ios-test-report.md
          echo "" >> maestro-bare-ios-test-report.md
          echo "## Sync Verification" >> maestro-bare-ios-test-report.md
          echo "- **External Test Document ID**: ${GITHUB_TEST_DOC_ID:-Not generated}" >> maestro-bare-ios-test-report.md

      - name: Upload test artifacts
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: bare-rn-ios-maestro-test-results
          path: |
            maestro-bare-ios-test-report.md
            .github/scripts/browserstack-maestro-test.py