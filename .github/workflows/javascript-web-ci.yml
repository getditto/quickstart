name: JavaScript Web CI

on:
  pull_request:
    paths:
      - "javascript-web/**"
      - ".github/workflows/javascript-web-ci.yml"
  push:
    paths:
      - "javascript-web/**"
      - ".github/workflows/javascript-web-ci.yml"
  workflow_dispatch:

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest
    timeout-minutes: 10

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "22"
          cache: "npm"
          cache-dependency-path: javascript-web/package-lock.json

      - name: Install dependencies
        working-directory: javascript-web
        run: npm ci

      - name: Run linter
        working-directory: javascript-web
        run: npm run lint

  build:
    name: Build
    runs-on: ubuntu-latest
    needs: lint
    timeout-minutes: 10

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "22"
          cache: "npm"
          cache-dependency-path: javascript-web/package-lock.json

      - name: Create .env file
        run: |
          echo "DITTO_APP_ID=${{ secrets.DITTO_APP_ID }}" > .env
          echo "DITTO_PLAYGROUND_TOKEN=${{ secrets.DITTO_PLAYGROUND_TOKEN }}" >> .env
          echo "DITTO_AUTH_URL=${{ secrets.DITTO_AUTH_URL }}" >> .env
          echo "DITTO_WEBSOCKET_URL=${{ secrets.DITTO_WEBSOCKET_URL }}" >> .env

      - name: Install dependencies
        working-directory: javascript-web
        run: npm ci

      - name: Build application
        working-directory: javascript-web
        run: npm run build

      - name: Upload build artifact
        uses: actions/upload-artifact@v4
        with:
          name: javascript-web-dist
          path: javascript-web/dist/
          retention-days: 1

  browserstack-web:
    name: BrowserStack Tests
    runs-on: ubuntu-latest
    needs: build
    timeout-minutes: 30

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "22"

      - name: Download build artifact
        uses: actions/download-artifact@v4
        with:
          name: javascript-web-dist
          path: javascript-web/dist

      - name: Install http-server
        run: npm install -g http-server

      - name: Start web server
        working-directory: javascript-web
        run: |
          nohup http-server dist -p 3000 -c-1 --cors > server.log 2>&1 &
          sleep 5
          curl -f http://localhost:3000/ || (echo "Server failed to start" && cat server.log && exit 1)
          echo "Web server started on http://localhost:3000"

      - name: Install BrowserStack Local binary
        run: |
          wget "https://www.browserstack.com/browserstack-local/BrowserStackLocal-linux-x64.zip"
          unzip BrowserStackLocal-linux-x64.zip
          chmod +x BrowserStackLocal

          # Create config file with restricted permissions
          echo "key: ${{ secrets.BROWSERSTACK_ACCESS_KEY }}" > browserstack.yml
          chmod 600 browserstack.yml

          nohup ./BrowserStackLocal --config-file ./browserstack.yml --daemon start &
          sleep 20
          echo "BrowserStack Local tunnel established"

      - name: Make test script executable
        run: chmod +x .github/scripts/browserstack-test.py

      - name: Seed and execute tests on BrowserStack
        uses: nick-fields/retry@v3
        env:
          BROWSERSTACK_USERNAME: ${{ secrets.BROWSERSTACK_USERNAME }}
          BROWSERSTACK_ACCESS_KEY: ${{ secrets.BROWSERSTACK_ACCESS_KEY }}
          GITHUB_RUN_NUMBER: ${{ github.run_number }}
          GITHUB_RUN_ID: ${{ github.run_id }}
        with:
          max_attempts: 5
          timeout_minutes: 20
          retry_wait_seconds: 300
          command: |
            # Seed test task to Ditto Cloud
            echo "Seeding test task to Ditto Cloud..."
            SEED_RESPONSE=$(curl -s -X POST "${{ secrets.DITTO_API_URL }}/api/v1/collections/tasks/documents" \
              -H "X-DITTO-API-KEY: ${{ secrets.DITTO_API_KEY }}" \
              -H "Content-Type: application/json" \
              -d "{\"text\": \"E2E Test Task - javascript-web - $(date +%s)\", \"isCompleted\": false}")

            TASK_TITLE=$(echo "$SEED_RESPONSE" | jq -r '.text')
            if [ "$TASK_TITLE" = "null" ] || [ -z "$TASK_TITLE" ]; then
              echo "Error: Failed to seed task"
              exit 1
            fi
            echo "Seeded task: $TASK_TITLE"

            # Set environment variable for Python script
            export DITTO_CLOUD_TASK_TITLE="$TASK_TITLE"

            # Install Python dependencies
            pip3 install selenium

            # Run the test script
            python3 .github/scripts/browserstack-test.py

      - name: Stop BrowserStack Local tunnel
        if: always()
        run: ./BrowserStackLocal --key "${{ secrets.BROWSERSTACK_ACCESS_KEY }}" --daemon stop || true

      - name: Upload test artifacts
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: test-results
          path: |
            javascript-web/dist/
            javascript-web/server.log
            *screenshot*.png

  summary:
    name: CI Report
    runs-on: ubuntu-latest
    needs: [lint, build, browserstack-web]
    if: always()

    steps:
      - name: Report Results
        run: |
          echo "## 🌐 JavaScript Web CI" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY

          # Overall status
          if [[ "${{ needs.lint.result }}" == "success" && \
                "${{ needs.build.result }}" == "success" && \
                "${{ needs.browserstack-web.result }}" == "success" ]]; then
            echo "**Overall Status:** ✅ All checks passed" >> $GITHUB_STEP_SUMMARY
          else
            echo "**Overall Status:** ❌ Failed" >> $GITHUB_STEP_SUMMARY
          fi
          echo "" >> $GITHUB_STEP_SUMMARY

          echo "| Job | Status |" >> $GITHUB_STEP_SUMMARY
          echo "|-----|--------|" >> $GITHUB_STEP_SUMMARY
          echo "| Lint | ${{ needs.lint.result == 'success' && '✅ Passed' || '❌ Failed' }} |" >> $GITHUB_STEP_SUMMARY
          echo "| Build | ${{ needs.build.result == 'success' && '✅ Passed' || '❌ Failed' }} |" >> $GITHUB_STEP_SUMMARY
          echo "| BrowserStack Tests | ${{ needs.browserstack-web.result == 'success' && '✅ Passed' || '❌ Failed' }} |" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY

          # BrowserStack info
          echo "### BrowserStack Session" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "🔗 [View Test Results](https://automate.browserstack.com/builds?project=QuickStart+JavaScript+Web&build=CI+Build+%23${{ github.run_number }})" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**Tested Browsers:**" >> $GITHUB_STEP_SUMMARY
          echo "- Chrome 120.0 (Windows 11)" >> $GITHUB_STEP_SUMMARY
          echo "- Firefox 121.0 (Windows 11)" >> $GITHUB_STEP_SUMMARY
