name: javascript-web-browserstack

on:
  pull_request:
    branches:
      - main
      - 'sdk-*'
    paths:
      - 'javascript-web/**'
      - '.github/workflows/javascript-web-browserstack.yml'
  push:
    branches:
      - main
      - 'sdk-*'
    paths:
      - 'javascript-web/**'
      - '.github/workflows/javascript-web-browserstack.yml'
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build-and-test:
    name: Build and Test on BrowserStack
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22'
          cache: 'npm'
          cache-dependency-path: javascript-web/package-lock.json

      - name: Create .env file
        run: |
          echo "DITTO_APP_ID=${{ secrets.DITTO_APP_ID }}" > .env
          echo "DITTO_PLAYGROUND_TOKEN=${{ secrets.DITTO_PLAYGROUND_TOKEN }}" >> .env
          echo "DITTO_AUTH_URL=${{ secrets.DITTO_AUTH_URL }}" >> .env
          echo "DITTO_WEBSOCKET_URL=${{ secrets.DITTO_WEBSOCKET_URL }}" >> .env

      - name: Insert test document into Ditto Cloud
        id: seed_document
        uses: ./.github/actions/seed-ditto-document
        with:
          ditto-api-key: ${{ secrets.DITTO_API_KEY }}
          ditto-api-url: ${{ secrets.DITTO_API_URL }}
          app-name: 'javascript-web'

      - name: Set document ID for tests
        run: |
          echo "GITHUB_TEST_DOC_ID=${{ steps.seed_document.outputs.document-title }}" >> $GITHUB_ENV

      - name: Install dependencies
        working-directory: javascript-web
        run: npm ci

      - name: Run linter
        working-directory: javascript-web
        run: npm run lint

      - name: Build application
        working-directory: javascript-web
        run: |
          npm run build
          echo "App built successfully"

      - name: Start web server
        working-directory: javascript-web
        run: |
          nohup npx http-server dist -p 3000 -c-1 --cors > server.log 2>&1 &
          sleep 5
          curl -f http://localhost:3000/ || (echo "Server failed to start" && cat server.log && exit 1)
          echo "Web server started on http://localhost:3000"

      - name: BrowserStack Env Setup
        uses: 'browserstack/github-actions/setup-env@master'
        with:
          username:  ${{ secrets.BROWSERSTACK_USERNAME }}
          access-key: ${{ secrets.BROWSERSTACK_ACCESS_KEY }}
          build-name: 'CI Build #${{ github.run_number }}'
          project-name: 'QuickStart JavaScript Web'

      - name: BrowserStackLocal Setup
        uses: 'browserstack/github-actions/setup-local@master'
        with:
          local-testing: start
          local-identifier: random

      - name: Make test script executable
        run: chmod +x .github/scripts/browserstack-test.py

      - name: Execute tests on BrowserStack
        env:
          BROWSERSTACK_USERNAME: ${{ secrets.BROWSERSTACK_USERNAME }}
          BROWSERSTACK_ACCESS_KEY: ${{ secrets.BROWSERSTACK_ACCESS_KEY }}
          GITHUB_RUN_NUMBER: ${{ github.run_number }}
          GITHUB_RUN_ID: ${{ github.run_id }}
          GITHUB_TEST_DOC_ID: ${{ env.GITHUB_TEST_DOC_ID }}
        run: |
          # Install Python dependencies
          pip3 install selenium

          # Run the test script
          python3 .github/scripts/browserstack-test.py

      - name: BrowserStackLocal Stop
        if: always()
        uses: 'browserstack/github-actions/setup-local@master'
        with:
          local-testing: stop
          
      - name: Generate test report
        if: always()
        run: |
          echo "# BrowserStack Web Test Report" > test-report.md
          echo "" >> test-report.md
          echo "## Tested Browsers" >> test-report.md
          echo "- Chrome 120.0 (Windows 11)" >> test-report.md
          echo "- Firefox 121.0 (Windows 11)" >> test-report.md
          echo "" >> test-report.md
          echo "## Sync Verification" >> test-report.md
          echo "- GitHub Test Document ID: ${GITHUB_TEST_DOC_ID:-Not generated}" >> test-report.md

      - name: Upload test artifacts
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: test-results
          path: |
            javascript-web/dist/
            javascript-web/server.log
            test-report.md
            *screenshot*.png
            .github/scripts/browserstack-test.py

      - name: Generate test summary
        if: always()
        run: |
          echo "## 🌐 JavaScript Web CI" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY

          # Overall status
          if [ "${{ job.status }}" = "success" ]; then
            echo "**Overall Status:** ✅ All checks passed" >> $GITHUB_STEP_SUMMARY
          else
            echo "**Overall Status:** ❌ Failed" >> $GITHUB_STEP_SUMMARY
          fi
          echo "" >> $GITHUB_STEP_SUMMARY

          echo "| Check | Status |" >> $GITHUB_STEP_SUMMARY
          echo "|-------|--------|" >> $GITHUB_STEP_SUMMARY
          echo "| Lint | ✅ Passed |" >> $GITHUB_STEP_SUMMARY
          echo "| Build | ✅ Passed |" >> $GITHUB_STEP_SUMMARY
          echo "| BrowserStack Tests | ${{ job.status == 'success' && '✅ Passed' || '❌ Failed' }} |" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY

          # BrowserStack info
          echo "### BrowserStack Session" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "🔗 [View Dashboard](https://automate.browserstack.com/dashboard/v2)" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**Tested Browsers:**" >> $GITHUB_STEP_SUMMARY
          echo "- Chrome 120.0 (Windows 11)" >> $GITHUB_STEP_SUMMARY
          echo "- Firefox 121.0 (Windows 11)" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**Test Document ID:** \`${GITHUB_TEST_DOC_ID:-Not generated}\`" >> $GITHUB_STEP_SUMMARY
