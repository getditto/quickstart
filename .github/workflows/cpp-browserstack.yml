name: C++ TUI BrowserStack
on:
  pull_request:
    branches: [main]
    paths:
      - 'cpp-tui/**'
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  browserstack-test:
    name: BrowserStack Test C++ TUI
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Create .env file
        run: |
          echo "DITTO_APP_ID=${{ secrets.DITTO_APP_ID }}" > .env
          echo "DITTO_PLAYGROUND_TOKEN=${{ secrets.DITTO_PLAYGROUND_TOKEN }}" >> .env
          echo "DITTO_AUTH_URL=${{ secrets.DITTO_AUTH_URL }}" >> .env
          echo "DITTO_WEBSOCKET_URL=${{ secrets.DITTO_WEBSOCKET_URL }}" >> .env
      
      - name: Insert test document into Ditto Cloud
        run: |
          DOC_ID="cpp_browserstack_test_${GITHUB_RUN_ID}_${GITHUB_RUN_NUMBER}"
          
          RESPONSE=$(curl -s -w "\n%{http_code}" -X POST \
            -H 'Content-type: application/json' \
            -H "Authorization: Bearer ${{ secrets.DITTO_API_KEY }}" \
            -d "{
              \"statement\": \"INSERT INTO tasks DOCUMENTS (:newTask) ON ID CONFLICT DO UPDATE\",
              \"args\": {
                \"newTask\": {
                  \"_id\": \"${DOC_ID}\",
                  \"title\": \"C++ BrowserStack Test Task ${GITHUB_RUN_ID}\",
                  \"done\": false,
                  \"deleted\": false
                }
              }
            }" \
          "https://${{ secrets.DITTO_API_URL }}/api/v4/store/execute")
          
          HTTP_CODE=$(echo "$RESPONSE" | tail -n1)
          
          if [ "$HTTP_CODE" -eq 200 ] || [ "$HTTP_CODE" -eq 201 ]; then
            echo "‚úì Successfully inserted BrowserStack test document: ${DOC_ID}"
            echo "BROWSERSTACK_TEST_DOC_ID=${DOC_ID}" >> $GITHUB_ENV
          else
            echo "‚ùå Failed to insert BrowserStack test document"
            exit 1
          fi
      
      - name: Install dependencies and setup real Ditto SDK
        working-directory: cpp-tui/taskscpp
        run: |
          sudo apt-get update
          sudo apt-get install -y cmake clang build-essential
          
          echo "üì• Downloading real Ditto C++ SDK..."
          curl -O https://software.ditto.live/cpp-linux-x86_64/Ditto/4.12.0/dist/Ditto.tar.gz
          tar xvfz Ditto.tar.gz
          cp Ditto.h sdk/
          cp libditto.a sdk/
          
          # Generate env.h
          awk -f scripts/generate_env.awk ../../.env > src/env.h
          
          # Build with real SDK
          make build
          
          echo "‚úÖ C++ TUI app built with real Ditto SDK for BrowserStack testing"
      
      - name: Test sync with BrowserStack document  
        working-directory: cpp-tui/taskscpp
        env:
          BROWSERSTACK_TEST_DOC_ID: ${{ env.BROWSERSTACK_TEST_DOC_ID }}
        run: |
          echo "üß™ Testing sync with BrowserStack document: ${BROWSERSTACK_TEST_DOC_ID}"
          echo "üåê This will connect to REAL Ditto Cloud and verify document syncs"
          
          # Build and run integration test with REAL Ditto SDK
          g++ -std=c++17 -I./src -I./sdk -I./third_party/cxxopts/include \
            tests/integration_test.cpp \
            src/task.cpp src/tasks_peer.cpp src/tasks_log.cpp \
            -L./sdk -lditto -ldl -lrt -pthread \
            -o build/integration_test
          
          # Run test that will verify the document syncs via real Ditto SDK
          ./build/integration_test
          
          echo "‚úÖ BrowserStack sync test with REAL Ditto SDK completed successfully"