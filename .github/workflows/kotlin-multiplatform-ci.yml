name: Kotlin Multiplatform CI

on:
  push:
    branches: [ main ]
    paths: 
      - 'kotlin-multiplatform/**'
  pull_request:
    branches: [ main ]
    paths:
      - 'kotlin-multiplatform/**'

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  lint:
    name: Lint (ubuntu-latest)
    runs-on: ubuntu-latest
    timeout-minutes: 10
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Java
      uses: actions/setup-java@v4
      with:
        distribution: 'temurin'
        java-version: '17'
    
    - name: Setup Gradle
      uses: gradle/actions/setup-gradle@v4
    
    - name: Create .env file
      run: |
        echo "DITTO_APP_ID=test_app_id" > .env
        echo "DITTO_PLAYGROUND_TOKEN=test_token" >> .env
        echo "DITTO_AUTH_URL=https://test.com" >> .env
        echo "DITTO_WEBSOCKET_URL=wss://test.com" >> .env
    
    - name: Run linting
      working-directory: kotlin-multiplatform
      run: ./gradlew detekt

  build-android:
    name: Build Android (ubuntu-latest)
    runs-on: ubuntu-latest
    needs: lint
    timeout-minutes: 30
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Java
      uses: actions/setup-java@v4
      with:
        distribution: 'temurin'
        java-version: '17'
    
    - name: Setup Android SDK
      uses: android-actions/setup-android@v3
    
    - name: Setup Gradle
      uses: gradle/actions/setup-gradle@v4
    
    - name: Create .env file
      run: |
        echo "DITTO_APP_ID=test_app_id" > .env
        echo "DITTO_PLAYGROUND_TOKEN=test_token" >> .env
        echo "DITTO_AUTH_URL=https://test.com" >> .env
        echo "DITTO_WEBSOCKET_URL=wss://test.com" >> .env
    
    - name: Build Android
      working-directory: kotlin-multiplatform
      run: ./gradlew composeApp:assembleDebug

  build-ios:
    name: Build iOS (macos-latest)
    runs-on: macos-latest
    needs: lint
    timeout-minutes: 30
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Java
      uses: actions/setup-java@v4
      with:
        distribution: 'temurin'
        java-version: '17'
    
    - name: Setup Xcode
      uses: maxim-lobanov/setup-xcode@v1
      with:
        xcode-version: 'latest-stable'
    
    - name: Setup Gradle
      uses: gradle/actions/setup-gradle@v4
    
    - name: Create .env file
      run: |
        echo "DITTO_APP_ID=test_app_id" > .env
        echo "DITTO_PLAYGROUND_TOKEN=test_token" >> .env
        echo "DITTO_AUTH_URL=https://test.com" >> .env
        echo "DITTO_WEBSOCKET_URL=wss://test.com" >> .env
    
    - name: Build iOS
      working-directory: kotlin-multiplatform
      run: ./gradlew composeApp:linkDebugFrameworkIosSimulatorArm64

  build-desktop:
    name: Build Desktop (ubuntu-latest)
    runs-on: ubuntu-latest
    needs: lint
    timeout-minutes: 30
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Java
      uses: actions/setup-java@v4
      with:
        distribution: 'temurin'
        java-version: '17'
    
    - name: Setup Gradle
      uses: gradle/actions/setup-gradle@v4
    
    - name: Create .env file
      run: |
        echo "DITTO_APP_ID=test_app_id" > .env
        echo "DITTO_PLAYGROUND_TOKEN=test_token" >> .env
        echo "DITTO_AUTH_URL=https://test.com" >> .env
        echo "DITTO_WEBSOCKET_URL=wss://test.com" >> .env
    
    - name: Build Desktop
      working-directory: kotlin-multiplatform
      run: ./gradlew composeApp:desktopJar

  integration-test:
    name: Integration Test (ubuntu-latest)
    runs-on: ubuntu-latest
    needs: [build-android, build-ios, build-desktop]
    timeout-minutes: 15
    if: github.event_name == 'pull_request'
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Java
      uses: actions/setup-java@v4
      with:
        distribution: 'temurin'
        java-version: '17'
    
    - name: Setup Gradle
      uses: gradle/actions/setup-gradle@v4
    
    - name: Create .env file
      run: |
        echo "DITTO_APP_ID=test_app_id" > .env
        echo "DITTO_PLAYGROUND_TOKEN=test_token" >> .env
        echo "DITTO_AUTH_URL=https://test.com" >> .env
        echo "DITTO_WEBSOCKET_URL=wss://test.com" >> .env
    
    - name: Run integration test
      working-directory: kotlin-multiplatform
      env:
        GITHUB_TEST_DOC_ID: "test_doc_${{ github.run_id }}"
        DITTO_APP_ID: "test_app"
        DITTO_PLAYGROUND_TOKEN: "test_token"
        DITTO_AUTH_URL: "https://test.com"
        DITTO_WEBSOCKET_URL: "wss://test.com"
      run: ./gradlew :composeApp:desktopTest --tests="integration.DittoSyncIntegrationTest.testDittoSyncIntegration"

  summary:
    name: Summary
    runs-on: ubuntu-latest
    needs: [lint, build-android, build-ios, build-desktop, integration-test]
    if: always()
    
    steps:
    - name: Check job statuses
      run: |
        echo "Job statuses:"
        echo "Lint: ${{ needs.lint.result }}"
        echo "Build Android: ${{ needs.build-android.result }}"
        echo "Build iOS: ${{ needs.build-ios.result }}"
        echo "Build Desktop: ${{ needs.build-desktop.result }}"
        echo "Integration Test: ${{ needs.integration-test.result }}"
        
        # Check if any required job failed
        if [[ "${{ needs.lint.result }}" == "failure" || \
              "${{ needs.build-android.result }}" == "failure" || \
              "${{ needs.build-ios.result }}" == "failure" || \
              "${{ needs.build-desktop.result }}" == "failure" ]]; then
          echo "❌ Required jobs failed"
          exit 1
        else
          echo "✅ All required jobs passed"
        fi