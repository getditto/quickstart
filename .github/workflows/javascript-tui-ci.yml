name: JavaScript TUI CI
on:
  pull_request:
    paths:
      - 'javascript-tui/**'
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true


jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest
    timeout-minutes: 10

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22'
          cache: 'npm'
          cache-dependency-path: javascript-tui/package-lock.json

      - name: Install dependencies
        working-directory: javascript-tui
        run: npm ci

      - name: Run lint check
        working-directory: javascript-tui
        run: npm run test:format

  build:
    name: Build
    runs-on: ubuntu-latest
    needs: lint
    timeout-minutes: 15

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22'
          cache: 'npm'
          cache-dependency-path: javascript-tui/package-lock.json

      - name: Install dependencies
        working-directory: javascript-tui
        run: npm ci

      - name: Create .env file
        run: |
          echo "DITTO_APP_ID=${{ secrets.DITTO_APP_ID }}" > .env
          echo "DITTO_PLAYGROUND_TOKEN=${{ secrets.DITTO_PLAYGROUND_TOKEN }}" >> .env
          echo "DITTO_AUTH_URL=${{ secrets.DITTO_AUTH_URL }}" >> .env
          echo "DITTO_WEBSOCKET_URL=${{ secrets.DITTO_WEBSOCKET_URL }}" >> .env

      - name: Build application
        working-directory: javascript-tui
        run: npm run build

  integration-test:
    name: Integration Test
    runs-on: ubuntu-latest
    needs: [lint, build]
    timeout-minutes: 10

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22'
          cache: 'npm'
          cache-dependency-path: javascript-tui/package-lock.json

      - name: Install dependencies
        working-directory: javascript-tui
        run: npm ci

      - name: Create .env file
        run: |
          echo "DITTO_APP_ID=${{ secrets.DITTO_APP_ID }}" > .env
          echo "DITTO_PLAYGROUND_TOKEN=${{ secrets.DITTO_PLAYGROUND_TOKEN }}" >> .env
          echo "DITTO_AUTH_URL=${{ secrets.DITTO_AUTH_URL }}" >> .env
          echo "DITTO_WEBSOCKET_URL=${{ secrets.DITTO_WEBSOCKET_URL }}" >> .env

      - name: Seed test document to Ditto Cloud
        id: seed
        uses: ./.github/actions/seed-ditto-document
        with:
          ditto-api-key: ${{ secrets.DITTO_API_KEY }}
          ditto-api-url: ${{ secrets.DITTO_API_URL }}
          app-name: 'javascript-tui'

      - name: Run integration test
        working-directory: javascript-tui
        env:
          DITTO_CLOUD_TASK_TITLE: ${{ steps.seed.outputs.document-title }}
          GITHUB_RUN_ID: ${{ github.run_id }}
          GITHUB_RUN_NUMBER: ${{ github.run_number }}
        run: npm run build && node tests/integration_test.js

  summary:
    name: CI Report
    runs-on: ubuntu-latest
    needs: [lint, build, integration-test]
    if: always()

    steps:
    - name: Report Results
      run: |
        echo "## 📜 JavaScript TUI CI" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY

        # Overall status
        if [[ "${{ needs.lint.result }}" == "success" && \
              "${{ needs.build.result }}" == "success" && \
              "${{ needs.integration-test.result }}" == "success" ]]; then
          echo "**Overall Status:** ✅ All checks passed" >> $GITHUB_STEP_SUMMARY
        else
          echo "**Overall Status:** ❌ Failed" >> $GITHUB_STEP_SUMMARY
        fi
        echo "" >> $GITHUB_STEP_SUMMARY

        echo "| Job | Status |" >> $GITHUB_STEP_SUMMARY
        echo "|-----|--------|" >> $GITHUB_STEP_SUMMARY
        echo "| Lint | ${{ needs.lint.result == 'success' && '✅ Passed' || '❌ Failed' }} |" >> $GITHUB_STEP_SUMMARY
        echo "| Build | ${{ needs.build.result == 'success' && '✅ Passed' || '❌ Failed' }} |" >> $GITHUB_STEP_SUMMARY
        echo "| Integration Test | ${{ needs.integration-test.result == 'success' && '✅ Passed' || (needs.integration-test.result == 'skipped' && '⏭️ Skipped') || '❌ Failed' }} |" >> $GITHUB_STEP_SUMMARY