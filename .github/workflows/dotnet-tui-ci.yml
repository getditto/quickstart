name: .NET TUI CI
on:
  push:
    branches: [main]
    paths:
      - 'dotnet-tui/**'
  pull_request:
    branches: [main]
    paths:
      - 'dotnet-tui/**'
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest
    timeout-minutes: 10

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '9.0.x'

      - name: Create .env file
        run: |
          echo "DITTO_APP_ID=dummy_id" > .env
          echo "DITTO_PLAYGROUND_TOKEN=dummy_token" >> .env
          echo "DITTO_AUTH_URL=https://auth.cloud.ditto.live" >> .env
          echo "DITTO_WEBSOCKET_URL=wss://cloud.ditto.live" >> .env

      - name: Run dotnet format check
        working-directory: dotnet-tui
        run: |
          dotnet format --verify-no-changes --verbosity diagnostic
          if [ $? -ne 0 ]; then
            echo "❌ Code formatting issues found. Run 'dotnet format' to fix."
            exit 1
          fi

  build:
    name: Build
    strategy:
      matrix:
        os: ["macos-latest", "ubuntu-latest", "windows-latest"]
    runs-on: ${{ matrix.os }}
    needs: lint
    timeout-minutes: 15

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '9.0.x'

      - name: Create .env file
        run: |
          echo "DITTO_APP_ID=dummy_id" > .env
          echo "DITTO_PLAYGROUND_TOKEN=dummy_token" >> .env
          echo "DITTO_AUTH_URL=https://auth.cloud.ditto.live" >> .env
          echo "DITTO_WEBSOCKET_URL=wss://cloud.ditto.live" >> .env
        shell: bash

      - name: Build project
        working-directory: dotnet-tui
        run: dotnet build --configuration Release

  integration-test:
    name: Integration Test
    runs-on: ubuntu-latest
    needs: [lint, build]
    timeout-minutes: 10

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '9.0.x'


      - name: Create .env file
        run: |
          echo "DITTO_APP_ID=${{ secrets.DITTO_APP_ID }}" > .env
          echo "DITTO_PLAYGROUND_TOKEN=${{ secrets.DITTO_PLAYGROUND_TOKEN }}" >> .env
          echo "DITTO_AUTH_URL=${{ secrets.DITTO_AUTH_URL }}" >> .env
          echo "DITTO_WEBSOCKET_URL=${{ secrets.DITTO_WEBSOCKET_URL }}" >> .env

      - name: Insert test document into Ditto Cloud
        run: |
          TIMESTAMP=$(date +%s)
          INVERTED_TIMESTAMP=$((9999999999 - TIMESTAMP))
          DOC_ID="${INVERTED_TIMESTAMP}_ci_test_${GITHUB_RUN_ID}_${GITHUB_RUN_NUMBER}"
          DOC_TITLE="${INVERTED_TIMESTAMP}_ci_test_${GITHUB_RUN_ID}_${GITHUB_RUN_NUMBER}"

          RESPONSE=$(curl -s -w "\n%{http_code}" -X POST \
            -H 'Content-type: application/json' \
            -H "Authorization: Bearer ${{ secrets.DITTO_API_KEY }}" \
            -d "{
              \"statement\": \"INSERT INTO tasks DOCUMENTS (:newTask) ON ID CONFLICT DO UPDATE\",
              \"args\": {
                \"newTask\": {
                  \"_id\": \"${DOC_ID}\",
                  \"title\": \"${DOC_TITLE}\",
                  \"done\": false,
                  \"deleted\": false
                }
              }
            }" \
          "https://${{ secrets.DITTO_API_URL }}/api/v4/store/execute")

          HTTP_CODE=$(echo "$RESPONSE" | tail -n1)
          BODY=$(echo "$RESPONSE" | head -n-1)

          if [ "$HTTP_CODE" -eq 200 ] || [ "$HTTP_CODE" -eq 201 ]; then
            echo "GITHUB_TEST_DOC_TITLE=${DOC_TITLE}" >> $GITHUB_ENV
          else
            echo "❌ Failed to insert document. HTTP Status: $HTTP_CODE"
            echo "Response: $BODY"
            exit 1
          fi

      - name: Build .NET application
        working-directory: dotnet-tui
        run: dotnet build --configuration Release

      - name: Run .NET integration tests
        working-directory: dotnet-tui
        env:
          TASK_TO_FIND: ${{ env.GITHUB_TEST_DOC_TITLE }}
          GITHUB_RUN_ID: ${{ github.run_id }}
          GITHUB_RUN_NUMBER: ${{ github.run_number }}
        run: dotnet test DittoDotNetTasksConsole.Tests --configuration Release --logger "console;verbosity=detailed"