name: C++ TUI CI
on:
  push:
    branches: [main]
    paths:
      - 'cpp-tui/**'
  pull_request:
    branches: [main]
    paths:
      - 'cpp-tui/**'
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true


jobs:
  build-and-test:
    name: Build and Test C++ TUI
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y cmake clang clang-format build-essential
      
      - name: Create .env file
        run: |
          echo "DITTO_APP_ID=${{ secrets.DITTO_APP_ID }}" > .env
          echo "DITTO_PLAYGROUND_TOKEN=${{ secrets.DITTO_PLAYGROUND_TOKEN }}" >> .env
          echo "DITTO_AUTH_URL=${{ secrets.DITTO_AUTH_URL }}" >> .env
          echo "DITTO_WEBSOCKET_URL=${{ secrets.DITTO_WEBSOCKET_URL }}" >> .env
      
      - name: Run linter
        working-directory: cpp-tui/taskscpp
        run: |
          echo "🎨 Running clang-format check..."
          make format
          # Check if files were modified
          if ! git diff --exit-code; then
            echo "❌ Code style issues found. Run 'make format' to fix."
            exit 1
          fi
          echo "✅ Code style check passed"
      
      - name: Download and setup Ditto C++ SDK
        working-directory: cpp-tui/taskscpp
        run: |
          echo "📥 Downloading Ditto C++ SDK using Makefile logic..."
          make download-sdk
      
      - name: Build application
        working-directory: cpp-tui/taskscpp
        run: |
          echo "🔧 Generating env.h..."
          awk -f scripts/generate_env.awk ../../.env > src/env.h
          
          echo "🔨 Building C++ TUI application with REAL Ditto SDK..."
          make build
          
          echo "✅ C++ TUI app built with real Ditto SDK"
      
      - name: Run integration tests with REAL Ditto SDK
        working-directory: cpp-tui/taskscpp
        env:
          GITHUB_RUN_ID: ${{ github.run_id }}
          GITHUB_RUN_NUMBER: ${{ github.run_number }}
        run: |
          echo "🧪 Running C++ integration tests with Ditto Cloud..."
          echo "🌐 Tests will connect to Ditto Cloud and verify sync functionality"
          
          # Build integration test with REAL Ditto SDK
          g++ -std=c++17 -I./src -I./sdk -I./third_party/cxxopts/include \
            tests/integration_test.cpp \
            src/task.cpp src/tasks_peer.cpp src/tasks_log.cpp \
            -L./sdk -lditto -ldl -lrt -pthread \
            -o build/integration_test
          
          echo "🚀 Running integration tests..."
          ./build/integration_test
          
          echo "✅ C++ integration tests completed successfully"