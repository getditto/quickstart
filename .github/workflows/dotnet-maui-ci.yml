name: .NET MAUI CI

on:
  push:
    branches: [main]
    paths:
      - 'dotnet-maui/**'
      - '.github/workflows/dotnet-maui-ci.yml'
  pull_request:
    branches: [main]
    paths:
      - 'dotnet-maui/**'
      - '.github/workflows/dotnet-maui-ci.yml'
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest
    timeout-minutes: 10

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '9.0.x'

      - name: Create test .env file
        run: |
          echo "DITTO_APP_ID=test" > .env
          echo "DITTO_PLAYGROUND_TOKEN=test" >> .env
          echo "DITTO_AUTH_URL=test" >> .env
          echo "DITTO_WEBSOCKET_URL=test" >> .env

      - name: Restore workloads and dependencies
        working-directory: dotnet-maui/DittoMauiTasksApp
        run: |
          dotnet workload restore
          dotnet restore

      - name: Run .NET format check
        working-directory: dotnet-maui/DittoMauiTasksApp
        run: |
          dotnet format DittoMauiTasksApp.sln --verify-no-changes --verbosity diagnostic
          if [ $? -ne 0 ]; then
            echo "❌ Code formatting issues found. Run 'dotnet format' to fix."
            exit 1
          fi

  build-android:
    name: Build Android
    runs-on: ubuntu-latest
    needs: lint
    timeout-minutes: 20

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '9.0.x'

      - name: Setup Android SDK
        uses: android-actions/setup-android@v3

      - name: Create .env file
        run: |
          echo "DITTO_APP_ID=${{ secrets.DITTO_APP_ID }}" > .env
          echo "DITTO_PLAYGROUND_TOKEN=${{ secrets.DITTO_PLAYGROUND_TOKEN }}" >> .env
          echo "DITTO_AUTH_URL=${{ secrets.DITTO_AUTH_URL }}" >> .env
          echo "DITTO_WEBSOCKET_URL=${{ secrets.DITTO_WEBSOCKET_URL }}" >> .env

      - name: Restore workloads and dependencies
        working-directory: dotnet-maui/DittoMauiTasksApp
        run: |
          dotnet workload restore
          dotnet restore

      - name: Build Android APK (unsigned Release)
        working-directory: dotnet-maui/DittoMauiTasksApp
        run: |
          dotnet build DittoMauiTasksApp.csproj --configuration Release --framework net9.0-android --no-restore

  build-ios:
    name: Build iOS
    runs-on: macos-latest
    needs: lint
    timeout-minutes: 60

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '9.0.x'

      - name: Create .env file
        run: |
          echo "DITTO_APP_ID=${{ secrets.DITTO_APP_ID }}" > .env
          echo "DITTO_PLAYGROUND_TOKEN=${{ secrets.DITTO_PLAYGROUND_TOKEN }}" >> .env
          echo "DITTO_AUTH_URL=${{ secrets.DITTO_AUTH_URL }}" >> .env
          echo "DITTO_WEBSOCKET_URL=${{ secrets.DITTO_WEBSOCKET_URL }}" >> .env

      - name: Restore workloads and dependencies
        working-directory: dotnet-maui/DittoMauiTasksApp
        run: |
          dotnet workload restore
          dotnet restore --runtime iossimulator-arm64

      - name: Build iOS Simulator (Release)
        working-directory: dotnet-maui/DittoMauiTasksApp
        run: |
          dotnet build DittoMauiTasksApp.csproj --configuration Release --framework net9.0-ios --no-restore \
            /p:RuntimeIdentifier=iossimulator-arm64

  seed-task-data:
    name: Seed Task Data
    runs-on: ubuntu-latest
    needs: lint
    timeout-minutes: 5
    if: github.event_name == 'push' || (github.event_name == 'pull_request' && github.event.action != 'closed')

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '9.0.x'

      - name: Create .env file
        run: |
          echo "DITTO_APP_ID=${{ secrets.DITTO_APP_ID }}" > .env
          echo "DITTO_PLAYGROUND_TOKEN=${{ secrets.DITTO_PLAYGROUND_TOKEN }}" >> .env
          echo "DITTO_AUTH_URL=${{ secrets.DITTO_AUTH_URL }}" >> .env
          echo "DITTO_WEBSOCKET_URL=${{ secrets.DITTO_WEBSOCKET_URL }}" >> .env

      - name: Seed test task data
        working-directory: dotnet-maui
        run: |
          dotnet restore TestAppium
          EXPECTED_TASK_TITLE="Basic Test Task" dotnet run --project TestAppium

  browserstack-android:
    name: BrowserStack Android Tests
    runs-on: ubuntu-latest
    needs: [build-android, seed-task-data]
    timeout-minutes: 30
    if: github.event_name == 'push' || (github.event_name == 'pull_request' && github.event.action != 'closed')

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '9.0.x'

      - name: Setup Android SDK
        uses: android-actions/setup-android@v3

      - name: Create .env file
        run: |
          echo "DITTO_APP_ID=${{ secrets.DITTO_APP_ID }}" > .env
          echo "DITTO_PLAYGROUND_TOKEN=${{ secrets.DITTO_PLAYGROUND_TOKEN }}" >> .env
          echo "DITTO_AUTH_URL=${{ secrets.DITTO_AUTH_URL }}" >> .env
          echo "DITTO_WEBSOCKET_URL=${{ secrets.DITTO_WEBSOCKET_URL }}" >> .env

      - name: Restore workloads and dependencies
        working-directory: dotnet-maui/DittoMauiTasksApp
        run: |
          dotnet workload restore
          dotnet restore

      - name: Build Android APK (Release for BrowserStack)
        working-directory: dotnet-maui/DittoMauiTasksApp
        run: |
          dotnet build DittoMauiTasksApp.csproj --configuration Release --framework net9.0-android --no-restore

      - name: Upload Android APK to BrowserStack
        id: upload-android
        run: |
          echo "Uploading Android APK..."
          APK_PATH="dotnet-maui/DittoMauiTasksApp/bin/Release/net9.0-android/live.ditto.quickstart.mauitasksapp-Signed.apk"

          if [ ! -f "$APK_PATH" ]; then
            echo "Error: APK not found at $APK_PATH"
            find dotnet-maui/DittoMauiTasksApp/bin -name "*.apk" -type f
            exit 1
          fi

          UPLOAD_RESPONSE=$(curl -u "${{ secrets.BROWSERSTACK_USERNAME }}:${{ secrets.BROWSERSTACK_ACCESS_KEY }}" \
            -X POST "https://api-cloud.browserstack.com/app-automate/upload" \
            -F "file=@$APK_PATH" \
            -F "custom_id=ditto-dotnet-maui-android")

          echo "Upload response: $UPLOAD_RESPONSE"
          APP_URL=$(echo $UPLOAD_RESPONSE | jq -r .app_url)

          if [ "$APP_URL" = "null" ] || [ -z "$APP_URL" ]; then
            echo "Error: Failed to upload APK"
            exit 1
          fi

          echo "app_url=$APP_URL" >> $GITHUB_OUTPUT
          echo "Android APK uploaded: $APP_URL"

      - name: Run Android tests on BrowserStack
        working-directory: dotnet-maui/UITests.Android
        run: |
          dotnet restore
          BROWSERSTACK_USERNAME="${{ secrets.BROWSERSTACK_USERNAME }}" \
          BROWSERSTACK_ACCESS_KEY="${{ secrets.BROWSERSTACK_ACCESS_KEY }}" \
          BROWSERSTACK_APP_ID="${{ steps.upload-android.outputs.app_url }}" \
          EXPECTED_TASK_TITLE="Basic Test Task" \
          BUILD_NAME="CI Build #${{ github.run_number }}" \
          dotnet run

  browserstack-ios:
    name: BrowserStack iOS Tests
    runs-on: macos-latest
    needs: [build-ios, seed-task-data]
    timeout-minutes: 60
    if: github.event_name == 'push' || (github.event_name == 'pull_request' && github.event.action != 'closed')

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '9.0.x'

      - name: Create .env file
        run: |
          echo "DITTO_APP_ID=${{ secrets.DITTO_APP_ID }}" > .env
          echo "DITTO_PLAYGROUND_TOKEN=${{ secrets.DITTO_PLAYGROUND_TOKEN }}" >> .env
          echo "DITTO_AUTH_URL=${{ secrets.DITTO_AUTH_URL }}" >> .env
          echo "DITTO_WEBSOCKET_URL=${{ secrets.DITTO_WEBSOCKET_URL }}" >> .env

      - name: Restore workloads and dependencies
        working-directory: dotnet-maui/DittoMauiTasksApp
        run: |
          dotnet workload restore
          dotnet restore

      - name: Build iOS Device (Release for BrowserStack)
        working-directory: dotnet-maui/DittoMauiTasksApp
        run: |
          dotnet build DittoMauiTasksApp.csproj --configuration Release --framework net9.0-ios --no-restore \
            /p:RuntimeIdentifier=ios-arm64 \
            /p:CodesignKey="" \
            /p:CodesignProvision="" \
            /p:ArchiveOnBuild=false

      - name: Create iOS IPA for BrowserStack
        working-directory: dotnet-maui/DittoMauiTasksApp/bin/Release/net9.0-ios/ios-arm64
        run: |
          mkdir -p Payload
          cp -r DittoMauiTasksApp.app Payload/
          zip -r DittoMauiTasksApp-device.ipa Payload
          echo "Created IPA: $(pwd)/DittoMauiTasksApp-device.ipa"
          ls -la DittoMauiTasksApp-device.ipa

      - name: Upload iOS IPA to BrowserStack
        id: upload-ios
        run: |
          echo "Uploading iOS IPA..."
          IPA_PATH="dotnet-maui/DittoMauiTasksApp/bin/Release/net9.0-ios/ios-arm64/DittoMauiTasksApp-device.ipa"

          if [ ! -f "$IPA_PATH" ]; then
            echo "Error: IPA not found at $IPA_PATH"
            find dotnet-maui/DittoMauiTasksApp/bin -name "*.ipa" -type f
            exit 1
          fi

          UPLOAD_RESPONSE=$(curl -u "${{ secrets.BROWSERSTACK_USERNAME }}:${{ secrets.BROWSERSTACK_ACCESS_KEY }}" \
            -X POST "https://api-cloud.browserstack.com/app-automate/upload" \
            -F "file=@$IPA_PATH" \
            -F "custom_id=ditto-dotnet-maui-ios")

          echo "Upload response: $UPLOAD_RESPONSE"
          APP_URL=$(echo $UPLOAD_RESPONSE | jq -r .app_url)

          if [ "$APP_URL" = "null" ] || [ -z "$APP_URL" ]; then
            echo "Error: Failed to upload IPA"
            exit 1
          fi

          echo "app_url=$APP_URL" >> $GITHUB_OUTPUT
          echo "iOS IPA uploaded: $APP_URL"

      - name: Run iOS tests on BrowserStack
        working-directory: dotnet-maui/UITests.iOS
        run: |
          dotnet restore
          BROWSERSTACK_USERNAME="${{ secrets.BROWSERSTACK_USERNAME }}" \
          BROWSERSTACK_ACCESS_KEY="${{ secrets.BROWSERSTACK_ACCESS_KEY }}" \
          BROWSERSTACK_APP_ID="${{ steps.upload-ios.outputs.app_url }}" \
          EXPECTED_TASK_TITLE="Basic Test Task" \
          BUILD_NAME="CI Build #${{ github.run_number }}" \
          dotnet run